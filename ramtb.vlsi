module tb_sync_ram;

    parameter DATA_WIDTH = 8;
    parameter ADDR_WIDTH = 4;

    reg clk;
    reg we, re;
    reg [ADDR_WIDTH-1:0] addr;
    reg [DATA_WIDTH-1:0] din;
    wire [DATA_WIDTH-1:0] dout;

    // Instantiate the RAM
    sync_ram #(DATA_WIDTH, ADDR_WIDTH) uut (
        .clk(clk),
        .we(we),
        .re(re),
        .addr(addr),
        .din(din),
        .dout(dout)
    );

    // Clock generation
    initial clk = 0;
    always #5 clk = ~clk;  // 10 time units period

    initial begin
        // Initialize signals
        we = 0; re = 0; addr = 0; din = 0;

        // Write to address 2
        #10;
        we = 1; re = 0; addr = 4'b0010; din = 8'hA5;
        #10;
        we = 0;

        // Read from address 2
        #10;
        re = 1; addr = 4'b0010;
        #10;
        re = 0;

        // Write to address 5
        #10;
        we = 1; addr = 4'b0101; din = 8'h3C;
        #10;
        we = 0;

        // Read from address 5
        #10;
        re = 1; addr = 4'b0101;
        #10;
        re = 0;

        // Finish simulation
        #20;
        $finish;
    end

endmodule
